Loaded DRONE_NAME=drone15
Loaded INITIAL_LETTER=d
Loaded DRONE_ROLE=queen
Loaded DRONE_ROLE_DRONE15=queen
Loaded DRONE_ROLE_DRONE21=king
Loaded DRONE_COLOR=black
Loaded LOG_LEVEL=INFO
Loaded FLIGHT_IMPL=mock
Loaded ROVER_IMPL=mock
Loaded CAMERA_IMPL=mock
Loaded COMM_IMPL=wifi
Loaded CAMERA_API_URL=http://192.168.1.119:8001/api/positions
Loaded ALG_MODE=api
Loaded CLUSTER_HOSTFILE=/home/pi/cluster_hosts
Loaded CLUSTER_NP=4
[drone15] 09:59:18 - INFO - ðŸ”§ MOCK MODE: Flight controller initialized
INITIALIZING COMM_IMPL: wifi
[drone15] 09:59:18 - INFO - WifiEspController initialized on 0.0.0.0:47000, leader=True, drone=drone15
[drone15] 09:59:18 - INFO - Custom message callback set
[drone15] 09:59:18 - INFO - ESP message handler registered
[drone15] 09:59:18 - INFO - Available drones: ['drone15', 'drone21']
[drone15] 09:59:18 - INFO - Drone role: queen, color: black, initial_letter: d
[drone15] 09:59:18 - INFO - Drone drone15 mapped to unique role: queen
[drone15] 09:59:18 - INFO - Drone drone21 mapped to unique role: king
[drone15] 09:59:18 - INFO - Camera controller initialized: URL=http://192.168.1.119:8001/api/positions
[drone15] 09:59:18 - INFO - Mock camera controller bound to http://192.168.1.119:8001/api/positions
[drone15] 09:59:18 - INFO - Our team: black
[drone15] 09:59:18 - INFO - Starting chess drone MAIN LOOP (dynamic leadership)...
[drone15] 09:59:19 - INFO - === Leader run_once call ===
[camera] 09:59:19 - INFO - Camera controller initialized: URL=http://192.168.1.119:8001/api/positions
[camera] 09:59:19 - INFO - Mock camera controller bound to http://192.168.1.119:8001/api/positions
GOT BOARD: rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1
[drone15] 09:59:19 - INFO - Not our turn. Current turn is white, we are black. Waiting.
[drone15] 09:59:24 - INFO - Our turn detected - checking leader status
[drone15] 09:59:25 - INFO - Leader drone15 is healthy
[drone15] 09:59:25 - INFO - === Leader run_once call ===
GOT BOARD: rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1
OUR TURN: black
[drone15] 09:59:26 - ERROR - main loop error
Traceback (most recent call last):
  File "/home/pi/HotDrone2/drone/chess.py", line 1017, in run
    self.run_once()
  File "/home/pi/HotDrone2/drone/chess.py", line 276, in run_once
    move = get_turn_final(board, time_budget_ms=5000)
  File "/home/pi/HotDrone2/drone/chess.py", line 53, in get_turn_final
    return get_turn_mock(board, time_budget_ms=time_budget_ms)
  File "/home/pi/HotDrone2/drone/alg_mock2.py", line 111, in get_turn
    raise AlgPermanentError("board must be BoardState")
alg_mock2.AlgPermanentError: board must be BoardState
[drone15] 09:59:26 - INFO - Our turn detected - checking leader status
[drone15] 09:59:27 - INFO - Leader drone15 is healthy
[drone15] 09:59:27 - INFO - === Leader run_once call ===
GOT BOARD: rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1
OUR TURN: black
[drone15] 09:59:27 - ERROR - main loop error
Traceback (most recent call last):
  File "/home/pi/HotDrone2/drone/chess.py", line 1017, in run
    self.run_once()
  File "/home/pi/HotDrone2/drone/chess.py", line 276, in run_once
    move = get_turn_final(board, time_budget_ms=5000)
  File "/home/pi/HotDrone2/drone/chess.py", line 53, in get_turn_final
    return get_turn_mock(board, time_budget_ms=time_budget_ms)
  File "/home/pi/HotDrone2/drone/alg_mock2.py", line 111, in get_turn
    raise AlgPermanentError("board must be BoardState")
alg_mock2.AlgPermanentError: board must be BoardState
[drone15] 09:59:27 - INFO - Our turn detected - checking leader status
[drone15] 09:59:28 - INFO - Leader drone15 is healthy
[drone15] 09:59:28 - INFO - === Leader run_once call ===
GOT BOARD: rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1
OUR TURN: black
[drone15] 09:59:28 - ERROR - main loop error
Traceback (most recent call last):
  File "/home/pi/HotDrone2/drone/chess.py", line 1017, in run
    self.run_once()
  File "/home/pi/HotDrone2/drone/chess.py", line 276, in run_once
    move = get_turn_final(board, time_budget_ms=5000)
  File "/home/pi/HotDrone2/drone/chess.py", line 53, in get_turn_final
    return get_turn_mock(board, time_budget_ms=time_budget_ms)
  File "/home/pi/HotDrone2/drone/alg_mock2.py", line 111, in get_turn
    raise AlgPermanentError("board must be BoardState")
alg_mock2.AlgPermanentError: board must be BoardState
[drone15] 09:59:29 - INFO - Our turn detected - checking leader status
[drone15] 09:59:30 - INFO - Leader drone15 is healthy
[drone15] 09:59:30 - INFO - === Leader run_once call ===
GOT BOARD: rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1
OUR TURN: black
[drone15] 09:59:30 - ERROR - main loop error
Traceback (most recent call last):
  File "/home/pi/HotDrone2/drone/chess.py", line 1017, in run
    self.run_once()
  File "/home/pi/HotDrone2/drone/chess.py", line 276, in run_once
    move = get_turn_final(board, time_budget_ms=5000)
  File "/home/pi/HotDrone2/drone/chess.py", line 53, in get_turn_final
    return get_turn_mock(board, time_budget_ms=time_budget_ms)
  File "/home/pi/HotDrone2/drone/alg_mock2.py", line 111, in get_turn
    raise AlgPermanentError("board must be BoardState")
alg_mock2.AlgPermanentError: board must be BoardState
[drone15] 09:59:30 - INFO - Our turn detected - checking leader status
[drone15] 09:59:31 - INFO - Leader drone15 is healthy
[drone15] 09:59:31 - INFO - === Leader run_once call ===
GOT BOARD: rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1
OUR TURN: black
[drone15] 09:59:31 - ERROR - main loop error
Traceback (most recent call last):
  File "/home/pi/HotDrone2/drone/chess.py", line 1017, in run
    self.run_once()
  File "/home/pi/HotDrone2/drone/chess.py", line 276, in run_once
    move = get_turn_final(board, time_budget_ms=5000)
  File "/home/pi/HotDrone2/drone/chess.py", line 53, in get_turn_final
    return get_turn_mock(board, time_budget_ms=time_budget_ms)
  File "/home/pi/HotDrone2/drone/alg_mock2.py", line 111, in get_turn
    raise AlgPermanentError("board must be BoardState")
alg_mock2.AlgPermanentError: board must be BoardState
[drone15] 09:59:32 - INFO - Our turn detected - checking leader status
[drone15] 09:59:33 - INFO - Leader drone15 is healthy
[drone15] 09:59:33 - INFO - === Leader run_once call ===
GOT BOARD: rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1
OUR TURN: black
[drone15] 09:59:33 - ERROR - main loop error
Traceback (most recent call last):
  File "/home/pi/HotDrone2/drone/chess.py", line 1017, in run
    self.run_once()
  File "/home/pi/HotDrone2/drone/chess.py", line 276, in run_once
    move = get_turn_final(board, time_budget_ms=5000)
  File "/home/pi/HotDrone2/drone/chess.py", line 53, in get_turn_final
    return get_turn_mock(board, time_budget_ms=time_budget_ms)
  File "/home/pi/HotDrone2/drone/alg_mock2.py", line 111, in get_turn
    raise AlgPermanentError("board must be BoardState")
alg_mock2.AlgPermanentError: board must be BoardState
[drone15] 09:59:33 - INFO - Our turn detected - checking leader status
[drone15] 09:59:34 - WARNING - [WiFi] Drone drone21 is not responding to ping
[drone15] 09:59:34 - INFO - Leader drone15 is healthy
[drone15] 09:59:34 - INFO - === Leader run_once call ===
GOT BOARD: rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1
OUR TURN: black
[drone15] 09:59:34 - ERROR - main loop error
Traceback (most recent call last):
  File "/home/pi/HotDrone2/drone/chess.py", line 1017, in run
    self.run_once()
  File "/home/pi/HotDrone2/drone/chess.py", line 276, in run_once
    move = get_turn_final(board, time_budget_ms=5000)
  File "/home/pi/HotDrone2/drone/chess.py", line 53, in get_turn_final
    return get_turn_mock(board, time_budget_ms=time_budget_ms)
  File "/home/pi/HotDrone2/drone/alg_mock2.py", line 111, in get_turn
    raise AlgPermanentError("board must be BoardState")
alg_mock2.AlgPermanentError: board must be BoardState
[drone15] 09:59:34 - INFO - Our turn detected - checking leader status
[drone15] 09:59:35 - WARNING - [WiFi] Drone drone21 is not responding to ping
[drone15] 09:59:35 - INFO - Leader drone15 is healthy
[drone15] 09:59:35 - INFO - === Leader run_once call ===
GOT BOARD: rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1
OUR TURN: black
[drone15] 09:59:36 - ERROR - main loop error
Traceback (most recent call last):
  File "/home/pi/HotDrone2/drone/chess.py", line 1017, in run
    self.run_once()
  File "/home/pi/HotDrone2/drone/chess.py", line 276, in run_once
    move = get_turn_final(board, time_budget_ms=5000)
  File "/home/pi/HotDrone2/drone/chess.py", line 53, in get_turn_final
    return get_turn_mock(board, time_budget_ms=time_budget_ms)
  File "/home/pi/HotDrone2/drone/alg_mock2.py", line 111, in get_turn
    raise AlgPermanentError("board must be BoardState")
alg_mock2.AlgPermanentError: board must be BoardState
