#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ .env —Ñ–∞–π–ª–æ–≤ –¥–ª—è –¥—Ä–æ–Ω–æ–≤
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/setup_env.sh [drone_name]

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"

function show_help() {
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [drone_name]"
    echo ""
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥—Ä–æ–Ω—ã:"
    echo "  drone7  - –ª–∏–¥–µ—Ä (ANY —Ä–æ–ª—å)"
    echo "  drone6  - —Ñ–æ–ª–æ–≤–µ—Ä (Diamond —Ä–æ–ª—å)"
    echo "  drone19 - —Ñ–æ–ª–æ–≤–µ—Ä (Stick —Ä–æ–ª—å)"
    echo ""
    echo "–ë–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ - –ø–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 drone7    # –ù–∞—Å—Ç—Ä–æ–∏—Ç—å .env –¥–ª—è drone7"
    echo "  $0           # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é"
}

function setup_drone_env() {
    local drone_name="$1"
    local env_example_file="$PROJECT_ROOT/env.${drone_name}.example"
    local env_file="$PROJECT_ROOT/.env"
    
    if [[ ! -f "$env_example_file" ]]; then
        echo "‚ùå –ü—Ä–∏–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: $env_example_file"
        echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥—Ä–æ–Ω—ã: drone7, drone6, drone19"
        return 1
    fi
    
    echo "üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∞ .env –¥–ª—è $drone_name..."
    
    # –°–æ–∑–¥–∞—ë–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é, –µ—Å–ª–∏ .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [[ -f "$env_file" ]]; then
        backup_file="$env_file.backup.$(date +%Y%m%d_%H%M%S)"
        echo "üì¶ –°–æ–∑–¥–∞—ë–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é: $backup_file"
        cp "$env_file" "$backup_file"
    fi
    
    # –ö–æ–ø–∏—Ä—É–µ–º –ø—Ä–∏–º–µ—Ä –≤ .env
    cp "$env_example_file" "$env_file"
    echo "‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω –¥–ª—è $drone_name"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    echo ""
    echo "üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ .env —Ñ–∞–π–ª–∞:"
    echo "=========================="
    cat "$env_file"
    echo "=========================="
    echo ""
    echo "üöÄ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –¥—Ä–æ–Ω –±–µ–∑ export –∫–æ–º–∞–Ω–¥."
    echo "   –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ .env —Ñ–∞–π–ª–∞."
}

function interactive_menu() {
    echo "ü§ñ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ .env –¥–ª—è –¥—Ä–æ–Ω–æ–≤"
    echo "==========================================="
    echo ""
    echo "–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä–æ–Ω:"
    echo "1) drone7  (–ª–∏–¥–µ—Ä, ANY —Ä–æ–ª—å)"
    echo "2) drone6  (—Ñ–æ–ª–æ–≤–µ—Ä, Diamond —Ä–æ–ª—å)"
    echo "3) drone19 (—Ñ–æ–ª–æ–≤–µ—Ä, Stick —Ä–æ–ª—å)"
    echo "4) –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π .env"
    echo "5) –í—ã—Ö–æ–¥"
    echo ""
    
    read -p "–í–∞—à –≤—ã–±–æ—Ä (1-5): " choice
    
    case $choice in
        1)
            setup_drone_env "drone7"
            ;;
        2)
            setup_drone_env "drone6"
            ;;
        3)
            setup_drone_env "drone19"
            ;;
        4)
            local env_file="$PROJECT_ROOT/.env"
            if [[ -f "$env_file" ]]; then
                echo "üìÑ –¢–µ–∫—É—â–∏–π .env —Ñ–∞–π–ª:"
                echo "===================="
                cat "$env_file"
                echo "===================="
            else
                echo "‚ùå .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
            fi
            ;;
        5)
            echo "üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"
            exit 0
            ;;
        *)
            echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
            interactive_menu
            ;;
    esac
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
if [[ $# -eq 0 ]]; then
    # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
    interactive_menu
elif [[ $# -eq 1 ]]; then
    if [[ "$1" == "-h" || "$1" == "--help" ]]; then
        show_help
    else
        setup_drone_env "$1"
    fi
else
    echo "‚ùå –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤"
    show_help
    exit 1
fi
